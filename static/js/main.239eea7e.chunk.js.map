{"version":3,"sources":["Qrcode.jsx","reportWebVitals.js","store/reducer/user.reducer.js","store/root.reducer.js","store/index.js","index.js"],"names":["styles","inputWrapper","margin","display","justifyContent","width","inputBox","flexGrow","marginRight","qrCode","QRCodeStyling","height","image","dotsOptions","color","type","cornersSquareOptions","cornersDotOptions","backgroundOptions","imageOptions","crossOrigin","hideBackgroundDots","imageSize","qrOptions","typeNumber","mode","errorCorrectionLevel","Qrcode","useState","url","setUrl","setHeight","setWidth","logo","setLogo","mainMargin","setMainMargin","dotStyle","setDotStyle","dotColor","setDotColor","dotColorType","setDotColorType","dotGradientType","setDotGradientType","dotGradientOne","setDotGradientOne","dotGradientTwo","setDotGradientTwo","dotRotation","setDotRotation","cornerSQRStyle","setcornerSQRStyle","cornerSQRColor","setcornerSQRColor","cornerSQRColorType","setcornerSQRColorType","cornerSQRGradientType","setcornerSQRGradientType","cornerSQRGradientOne","setcornerSQRGradientOne","cornerSQRGradientTwo","setcornerSQRGradientTwo","cornerSQRRotation","setcornerSQRRotation","cornerDotStyle","setcornerDotStyle","cornerDotColor","setcornerDotColor","cornerDotColorType","setcornerDotColorType","cornerDotGradientType","setcornerDotGradientType","cornerDotGradientOne","setcornerDotGradientOne","cornerDotGradientTwo","setcornerDotGradientTwo","cornerDotRotation","setcornerDotRotation","BackgroundColor","setBackgroundColor","BackgroundColorType","setBackgroundColorType","BackgroundGradientType","setBackgroundGradientType","BackgroundGradientOne","setBackgroundGradientOne","BackgroundGradientTwo","setBackgroundGradientTwo","BackgroundRotation","setBackgroundRotation","hideImageDots","setHideImageDots","setImageSize","imageMargin","setImageMargin","qrTypeNumber","qrMode","qrErrorCorrectionLevel","fileExt","setFileExt","ref","useRef","useEffect","append","current","finalUpdate","data","gradient","rotation","colorStops","offset","update","createBlob","files","rawFile","reader","FileReader","onload","evt","result","readAsDataURL","defaultValue","onKeyUp","event","preventDefault","target","value","style","onChange","e","node","id","selected","onClick","checked","name","Fragment","min","max","defaultChecked","step","getRawData","then","row","console","log","border","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","USER_INITIAL_STATE","status","sirname","userReducer","state","payload","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.239eea7e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport QRCodeStyling from 'qr-code-styling';\r\nconst styles = {\r\n    inputWrapper: {\r\n        margin: \"20px 0\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        width: \"100%\"\r\n    },\r\n    inputBox: {\r\n        flexGrow: 1,\r\n        marginRight: 20\r\n    }\r\n};\r\n\r\nconst qrCode = new QRCodeStyling({\r\n    width: 300,\r\n    height: 300,\r\n    margin: 0,\r\n    image:\"https://upload.wikimedia.org/wikipedia/commons/5/51/Facebook_f_logo_%282019%29.svg\",\r\n    dotsOptions: {\r\n        color: \"red\",\r\n        type: \"rounded\",\r\n    },\r\n    cornersSquareOptions: {\r\n        color: \"#000000\",\r\n        type: \"square\",\r\n    },\r\n    cornersDotOptions: {\r\n        color: \"#000000\",\r\n        type: \"square\",\r\n    },\r\n    backgroundOptions:{\r\n        color:\"#ffffff\"\r\n    },\r\n    imageOptions: {\r\n        crossOrigin: \"anonymous\",\r\n        margin: 10,\r\n        hideBackgroundDots:true,\r\n        imageSize:0.4\r\n    },\r\n    qrOptions:{\r\n        typeNumber:0,\r\n        mode:\"Byte\",\r\n        errorCorrectionLevel:\"Q\"\r\n    }\r\n\r\n});\r\n\r\nconst Qrcode = () => {\r\n\r\n    const [url, setUrl] = useState(\"https://krishnadeveloper.github.io/react-qr-code-style/index.html\");\r\n    const [height, setHeight] = useState(300)\r\n    const [width, setWidth] = useState(300)\r\n    const [logo, setLogo] = useState(\"https://upload.wikimedia.org/wikipedia/commons/5/51/Facebook_f_logo_%282019%29.svg\")\r\n    const [mainMargin, setMainMargin] = useState(0);\r\n\r\n    // Dot Options\r\n    const [dotStyle, setDotStyle] = useState(\"square\");\r\n    const [dotColor, setDotColor] = useState(\"#000000\");\r\n    const [dotColorType, setDotColorType] = useState(\"single\");\r\n    const [dotGradientType, setDotGradientType] = useState(\"linear\");\r\n    const [dotGradientOne, setDotGradientOne] = useState(\"#000000\");\r\n    const [dotGradientTwo, setDotGradientTwo] = useState(\"#000000\");\r\n    const [dotRotation, setDotRotation] = useState(0)\r\n\r\n\r\n    // Corners Square Options\r\n    const [cornerSQRStyle, setcornerSQRStyle] = useState(\"square\");\r\n    const [cornerSQRColor, setcornerSQRColor] = useState(\"#000000\");\r\n    const [cornerSQRColorType, setcornerSQRColorType] = useState(\"single\");\r\n    const [cornerSQRGradientType, setcornerSQRGradientType] = useState(\"linear\");\r\n    const [cornerSQRGradientOne, setcornerSQRGradientOne] = useState(\"#000000\");\r\n    const [cornerSQRGradientTwo, setcornerSQRGradientTwo] = useState(\"#000000\");\r\n    const [cornerSQRRotation, setcornerSQRRotation] = useState(0)\r\n\r\n    // Corners Dot Options\r\n    const [cornerDotStyle, setcornerDotStyle] = useState(\"square\");\r\n    const [cornerDotColor, setcornerDotColor] = useState(\"#000000\");\r\n    const [cornerDotColorType, setcornerDotColorType] = useState(\"single\");\r\n    const [cornerDotGradientType, setcornerDotGradientType] = useState(\"linear\");\r\n    const [cornerDotGradientOne, setcornerDotGradientOne] = useState(\"#000000\");\r\n    const [cornerDotGradientTwo, setcornerDotGradientTwo] = useState(\"#000000\");\r\n    const [cornerDotRotation, setcornerDotRotation] = useState(0)\r\n\r\n\r\n    // Background Options\r\n    const [BackgroundColor, setBackgroundColor] = useState(\"#ffffff\");\r\n    const [BackgroundColorType, setBackgroundColorType] = useState(\"single\");\r\n    const [BackgroundGradientType, setBackgroundGradientType] = useState(\"linear\");\r\n    const [BackgroundGradientOne, setBackgroundGradientOne] = useState(\"#ffffff\");\r\n    const [BackgroundGradientTwo, setBackgroundGradientTwo] = useState(\"#ffffff\");\r\n    const [BackgroundRotation, setBackgroundRotation] = useState(0)\r\n\r\n    // Image Options\r\n    const [hideImageDots, setHideImageDots] = useState(true);\r\n    const [imageSize, setImageSize] = useState(0.4);\r\n    const [imageMargin, setImageMargin] = useState(10);\r\n\r\n    // QR Options\r\n    const [qrTypeNumber, setQrTypeNumber] = useState(0);\r\n    const [qrMode, setQrMode] = useState(\"Byte\");\r\n    const [qrErrorCorrectionLevel, setQrErrorCorrectionLevel] = useState(\"Q\")\r\n\r\n\r\n    const [fileExt, setFileExt] = useState(\"png\");\r\n    const ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        qrCode.append(ref.current);\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     qrCode.update({\r\n    //         data: url,\r\n    //     });\r\n    // }, [url]);\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        // Corners Square Options\r\n        let cornerSqrOpt = cornerSQRColorType === \"single\" ? {\r\n            type: cornerSQRStyle,\r\n            color: cornerSQRColor\r\n        } : {\r\n            type: cornerSQRStyle,\r\n            gradient: {\r\n                type: cornerSQRGradientType,\r\n                rotation: cornerSQRRotation,\r\n                colorStops: [{ offset: 0, color: cornerSQRGradientOne }, { offset: 1, color: cornerSQRGradientTwo }]\r\n            }\r\n        };\r\n\r\n        // Corners Dot Options\r\n        let cornerDotOpt = cornerDotColorType === \"single\" ? {\r\n            type: cornerDotStyle,\r\n            color: cornerDotColor\r\n        } : {\r\n            type: cornerDotStyle,\r\n            gradient: {\r\n                type: cornerDotGradientType,\r\n                rotation: cornerDotRotation,\r\n                colorStops: [{ offset: 0, color: cornerDotGradientOne }, { offset: 1, color: cornerDotGradientTwo }]\r\n            }\r\n        };\r\n\r\n        // Background options\r\n        let backgroundOpt = BackgroundColorType === \"single\" ? {\r\n            color: BackgroundColor\r\n        } : {\r\n            gradient: {\r\n                type: BackgroundGradientType,\r\n                rotation: BackgroundRotation,\r\n                colorStops: [{ offset: 0, color: BackgroundGradientOne }, { offset: 1, color: BackgroundGradientTwo }]\r\n            }\r\n        };\r\n\r\n\r\n        // console.log(cornerDotOpt)\r\n        const finalUpdate = {\r\n            data: url,\r\n            height, width,\r\n            image: logo,\r\n            margin: mainMargin,\r\n            dotsOptions: {\r\n                color: dotColor,\r\n                type: dotStyle,\r\n            },\r\n            cornersSquareOptions: cornerSqrOpt,\r\n            cornersDotOptions: cornerDotOpt,\r\n            backgroundOptions: backgroundOpt,\r\n            imageOptions: {\r\n                margin: imageMargin,\r\n                hideBackgroundDots:hideImageDots,\r\n                imageSize:imageSize\r\n            },\r\n            // qrOptions:{\r\n            //     typeNumber:qrTypeNumber,\r\n            //     mode:qrMode,\r\n            //     errorCorrectionLevel:qrErrorCorrectionLevel\r\n            // }\r\n            \r\n        }\r\n\r\n        qrCode.update(finalUpdate)\r\n\r\n\r\n    }, [\r\n        height, \r\n        width, \r\n        logo, \r\n        mainMargin, \r\n        dotStyle, \r\n        dotColor,\r\n        url,\r\n        cornerSQRStyle,\r\n        cornerSQRColor,\r\n        cornerSQRColorType,\r\n        cornerSQRGradientType,\r\n        cornerSQRGradientOne,\r\n        cornerSQRGradientTwo,\r\n        cornerSQRRotation,\r\n        cornerDotStyle,\r\n        cornerDotColor,\r\n        cornerDotColorType,\r\n        cornerDotGradientType,\r\n        cornerDotGradientOne,\r\n        cornerDotGradientTwo,\r\n        cornerDotRotation,\r\n        BackgroundColor,\r\n        BackgroundColorType,\r\n        BackgroundGradientType,\r\n        BackgroundGradientOne,\r\n        BackgroundGradientTwo,\r\n        BackgroundRotation,\r\n        hideImageDots,\r\n        imageSize,\r\n        imageMargin,\r\n        qrTypeNumber,\r\n        qrMode,\r\n        qrErrorCorrectionLevel,\r\n\r\n    ])\r\n\r\n    useEffect(()=>{\r\n        qrCode.update({\r\n            dotsOptions:{\r\n                gradient:{\r\n                    type:dotGradientType,\r\n                    rotation:dotRotation,\r\n                    colorStops:[{ offset: 0, color: dotGradientOne }, { offset: 1, color: dotGradientTwo }]\r\n                }\r\n            }\r\n        })\r\n\r\n    },[dotGradientType, dotGradientOne, dotGradientTwo, dotRotation])\r\n\r\n    const onUrlChange = (event) => {\r\n        event.preventDefault();\r\n        setUrl(event.target.value);\r\n    };\r\n\r\n    const onExtensionChange = (event) => {\r\n        setFileExt(event.target.value);\r\n    };\r\n\r\n    const onDownloadClick = () => {\r\n        qrCode.getRawData(\"png\").then(row => console.log(row))\r\n        // qrCode.download({\r\n        //     extension: fileExt\r\n        // });\r\n    };\r\n\r\n    function handleImageChange(evt) {\r\n        createBlob(evt.target.files)\r\n    }\r\n\r\n    const createBlob = (files) => {\r\n        const rawFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = function (evt) {\r\n            setLogo(reader.result)\r\n        }\r\n        reader.readAsDataURL(rawFile);\r\n    }\r\n    return (\r\n        <div>\r\n            <fieldset>\r\n                <legend>Main Data:</legend>\r\n                URL/Data : <input defaultValue={url} onKeyUp={onUrlChange} style={styles.inputBox} /><br />\r\n                Image : <input type=\"file\" onChange={handleImageChange} /><br />\r\n                Width : <input type=\"number\" value={width} onChange={(e) => setWidth(e.target.value)} style={styles.inputBox} />px<br />\r\n                Height : <input type=\"number\" value={height} onChange={(e) => setHeight(e.target.value)} style={styles.inputBox} />px<br />\r\n                Margin (Outer spacing) : <input type=\"number\" value={mainMargin} onChange={(e) => setMainMargin(e.target.value)} style={styles.inputBox} />px\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>Dot Options:</legend>\r\n                Dot Style : <select node=\"dotsOptions.type\" defaultValue={dotStyle} onChange={(e) => setDotStyle(e.target.value)} id=\"form-dots-type\">\r\n                    <option value=\"square\">Square</option>\r\n                    <option value=\"dots\">Dots</option>\r\n                    <option value=\"rounded\">Rounded</option>\r\n                    <option value=\"extra-rounded\" selected=\"\">Extra rounded</option>\r\n                    <option value=\"classy\">Classy</option>\r\n                    <option value=\"classy-rounded\">Classy rounded</option>\r\n                </select><br />\r\n                Color Type : <label><input type=\"radio\" onClick={() => setDotColorType(\"single\")} checked={dotColorType === \"single\"} value=\"single\" name=\"colortype\" /> Single</label>\r\n                <label><input type=\"radio\" onClick={() => setDotColorType(\"gradient\")} value=\"gradient\" checked={dotColorType === \"gradient\"} name=\"colortype\" /> Color Gradient</label><br />\r\n                {\r\n                    dotColorType === \"single\" ?\r\n                        <React.Fragment>\r\n                            Dots Color : <input type=\"color\" defaultValue={dotColor} onChange={(e) => setDotColor(e.target.value)} name=\"from\" /> <br />\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            Gradient Type : <label><input type=\"radio\" value=\"linear\" onClick={() => setDotGradientType(\"linear\")} checked={dotGradientType === \"linear\"} name=\"gradienttype\" /> Linear</label> <label><input type=\"radio\" value=\"radial\" name=\"gradienttype\" checked={dotGradientType === \"radial\"} onClick={() => setDotGradientType(\"radial\")} /> Radial</label><br />\r\n                            Dots Gradient : <input type=\"color\" onChange={(e) => setDotGradientOne(e.target.value)} defaultValue={dotGradientOne} name=\"from\" /> <input type=\"color\" onChange={(e) => setDotGradientTwo(e.target.value)} defaultValue={dotGradientTwo} name=\"to\" /> <br />\r\n                            Rotation : <input node=\"dotsOptionsHelper.gradient.rotation\" id=\"form-dots-gradient-rotation\" type=\"number\" onChange={(e) => setDotRotation(e.target.value)} min=\"0\" max=\"360\" defaultValue={dotRotation} /> ° (degree) <br />\r\n                        </React.Fragment>\r\n                }\r\n\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <legend>Corners Square Options:</legend>\r\n                Corners Square Style : <select node=\"cornersSquareOptions.type\" defaultValue={cornerSQRStyle} onChange={(e) => setcornerSQRStyle(e.target.value)} id=\"form-cornerSQRs-type\">\r\n                    <option value=\"\">None</option>\r\n                    <option value=\"square\">Square</option>\r\n                    <option value=\"dot\">Dot</option>\r\n                    <option value=\"extra-rounded\" selected=\"\">Extra rounded</option>\r\n                </select><br />\r\n                Color Type : <label><input type=\"radio\" onClick={() => setcornerSQRColorType(\"single\")} checked={cornerSQRColorType === \"single\"} value=\"single\" name=\"cornercolortype\" /> Single</label>\r\n                <label><input type=\"radio\" onClick={() => setcornerSQRColorType(\"gradient\")} value=\"gradient\" checked={cornerSQRColorType === \"gradient\"} name=\"cornercolortype\" /> Color Gradient</label><br />\r\n                {\r\n                    cornerSQRColorType === \"single\" ?\r\n                        <React.Fragment>\r\n                            Corners Square Color : <input type=\"color\" defaultValue={cornerSQRColor} onChange={(e) => setcornerSQRColor(e.target.value)} name=\"from\" /> <br />\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            Gradient Type : <label><input type=\"radio\" value=\"linear\" onClick={() => setcornerSQRGradientType(\"linear\")} checked={cornerSQRGradientType === \"linear\"} name=\"cornerSQRsOptionsHelper\" /> Linear</label> <label><input type=\"radio\" value=\"radial\" name=\"cornerSQRsOptionsHelper\" checked={cornerSQRGradientType === \"radial\"} onClick={() => setcornerSQRGradientType(\"radial\")} /> Radial</label><br />\r\n                            Dot Gradient : <input type=\"color\" onChange={(e) => setcornerSQRGradientOne(e.target.value)} defaultValue={cornerSQRGradientOne} name=\"from\" /> <input type=\"color\" onChange={(e) => setcornerSQRGradientTwo(e.target.value)} defaultValue={cornerSQRGradientTwo} name=\"to\" /> <br />\r\n                            Rotation : <input node=\"cornerSQRsOptionsHelper.gradient.rotation\" id=\"form-cornerSQRs-gradient-rotation\" type=\"number\" onChange={(e) => setcornerSQRRotation(e.target.value)} min=\"0\" max=\"360\" defaultValue={cornerSQRRotation} /> ° (degree) <br />\r\n                        </React.Fragment>\r\n                }\r\n\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <legend>Corners Dot Options:</legend>\r\n                Corners Dot Style : <select node=\"cornersSquareOptions.type\" defaultValue={cornerDotStyle} onChange={(e) => setcornerDotStyle(e.target.value)} id=\"form-cornerDots-type\">\r\n                    <option value=\"\" >None</option>\r\n                    <option value=\"square\">Square</option>\r\n                    <option value=\"dot\">Dot</option>\r\n                </select><br />\r\n                Color Type : <label><input type=\"radio\" onClick={() => setcornerDotColorType(\"single\")} checked={cornerDotColorType === \"single\"} value=\"single\" name=\"cornersqrcolortype\" /> Single</label>\r\n                <label><input type=\"radio\" onClick={() => setcornerDotColorType(\"gradient\")} value=\"gradient\" checked={cornerDotColorType === \"gradient\"} name=\"cornersqrcolortype\" /> Color Gradient</label><br />\r\n                {\r\n                    cornerDotColorType === \"single\" ?\r\n                        <React.Fragment>\r\n                            Corners Square Color : <input type=\"color\" defaultValue={cornerDotColor} onChange={(e) => setcornerDotColor(e.target.value)} name=\"from\" /> <br />\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            Gradient Type : <label><input type=\"radio\" value=\"linear\" onClick={() => setcornerDotGradientType(\"linear\")} checked={cornerDotGradientType === \"linear\"} name=\"cornerDotsOptionsHelper\" /> Linear</label> <label><input type=\"radio\" value=\"radial\" name=\"cornerDotsOptionsHelper\" checked={cornerDotGradientType === \"radial\"} onClick={() => setcornerDotGradientType(\"radial\")} /> Radial</label><br />\r\n                            Dot Gradient : <input type=\"color\" onChange={(e) => setcornerDotGradientOne(e.target.value)} defaultValue={cornerDotGradientOne} name=\"from\" /> <input type=\"color\" onChange={(e) => setcornerDotGradientTwo(e.target.value)} defaultValue={cornerDotGradientTwo} name=\"to\" /> <br />\r\n                            Rotation : <input node=\"cornerDotsOptionsHelper.gradient.rotation\" id=\"form-cornerDots-gradient-rotation\" type=\"number\" onChange={(e) => setcornerDotRotation(e.target.value)} min=\"0\" max=\"360\" defaultValue={cornerDotRotation} /> ° (degree) <br />\r\n                        </React.Fragment>\r\n                }\r\n            </fieldset>\r\n            \r\n            <fieldset>\r\n                <legend>Background Options:</legend>\r\n                \r\n                Color Type : <label><input type=\"radio\" onClick={() => setBackgroundColorType(\"single\")} checked={BackgroundColorType === \"single\"} value=\"single\" name=\"bgcolortype\" /> Single</label>\r\n                <label><input type=\"radio\" onClick={() => setBackgroundColorType(\"gradient\")} value=\"gradient\" checked={BackgroundColorType === \"gradient\"} name=\"bgcolortype\" /> Color Gradient</label><br />\r\n                {\r\n                    BackgroundColorType === \"single\" ?\r\n                        <React.Fragment>\r\n                            Background Color : <input type=\"color\" defaultValue={BackgroundColor} onChange={(e) => setBackgroundColor(e.target.value)} name=\"from\" /> <br />\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            Gradient Type : <label><input type=\"radio\" value=\"linear\" onClick={() => setBackgroundGradientType(\"linear\")} checked={BackgroundGradientType === \"linear\"} name=\"BackgroundsOptionsHelper\" /> Linear</label> <label><input type=\"radio\" value=\"radial\" name=\"BackgroundsOptionsHelper\" checked={BackgroundGradientType === \"radial\"} onClick={() => setBackgroundGradientType(\"radial\")} /> Radial</label><br />\r\n                            Background Gradient : <input type=\"color\" onChange={(e) => setBackgroundGradientOne(e.target.value)} defaultValue={BackgroundGradientOne} name=\"from\" /> <input type=\"color\" onChange={(e) => setBackgroundGradientTwo(e.target.value)} defaultValue={BackgroundGradientTwo} name=\"to\" /> <br />\r\n                            Rotation : <input node=\"BackgroundsOptionsHelper.gradient.rotation\" id=\"form-Backgrounds-gradient-rotation\" type=\"number\" onChange={(e) => setBackgroundRotation(e.target.value)} min=\"0\" max=\"360\" defaultValue={BackgroundRotation} /> ° (degree) <br />\r\n                        </React.Fragment>\r\n                }\r\n            </fieldset>\r\n            \r\n            <fieldset>\r\n                <legend>Image Options:</legend>\r\n                Hide Background Dots : <input type=\"checkbox\" defaultChecked={hideImageDots} value={hideImageDots} onChange={(e)=>setHideImageDots(!hideImageDots)} /><br/>\r\n                Image Size : <input node=\"imageOptions.imageSize\" id=\"form-image-size\" type=\"number\" min=\"0\" max=\"1\" step=\"0.1\" onChange={(e)=>setImageSize(e.target.value)} onKeyUp={(e)=>setImageSize(e.target.value)} defaultValue={imageSize} /><br />\r\n                Margin (Outer space) : <input node=\"imageOptions.margin\" id=\"form-image-margin\" type=\"number\" min=\"0\" max=\"10000\" onChange={(e)=>setImageMargin(e.target.value)} onKeyUp={(e)=>setImageMargin(e.target.value)} defaultValue={imageMargin} /><br />\r\n            </fieldset><br/>\r\n\r\n            {/* <fieldset>\r\n                <legend>QR Options:</legend>\r\n                \r\n                Type Number : <input node=\"qrOptions.typeNumber\" defaultValue={qrTypeNumber} onChange={(e)=>setQrTypeNumber(e.target.value)} onKeyUp={(e)=>setQrTypeNumber(e.target.value)} id=\"form-qr-type-number\" type=\"number\" min=\"0\" max=\"40\" value=\"0\"/><br />\r\n                Mode : <select node=\"qrOptions.mode\" defaultValue={qrMode} onChange={(e)=>setQrMode(e.target.value)} id=\"form-qr-mode\">\r\n                                <option value=\"Numeric\">Numeric</option>\r\n                                <option value=\"Alphanumeric\">Alphanumeric</option>\r\n                                <option value=\"Byte\" selected=\"\">Byte</option>\r\n                                <option value=\"Kanji\">Kanji</option>\r\n                            </select><br/>\r\n                Error Correction Level : <select node=\"qrOptions.errorCorrectionLevel\" defaultValue={qrErrorCorrectionLevel} onChange={(e)=>setQrErrorCorrectionLevel(e.target.value)} id=\"form-qr-error-correction-level\">\r\n                                <option value=\"L\">L</option>\r\n                                <option value=\"M\">M</option>\r\n                                <option value=\"Q\" selected=\"\">Q</option>\r\n                                <option value=\"H\">H</option>\r\n                            </select><br/>\r\n            </fieldset><br/> */}\r\n\r\n            <div style={styles.inputWrapper}>\r\n\r\n                <select onChange={onExtensionChange} value={fileExt}>\r\n                    <option value=\"png\">PNG</option>\r\n                    <option value=\"jpeg\">JPEG</option>\r\n                    <option value=\"webp\">WEBP</option>\r\n                </select>\r\n                <button onClick={onDownloadClick}>Download</button>\r\n            </div>\r\n            <div ref={ref} style={{ border: \"2px dotted red\" }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Qrcode\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const USER_INITIAL_STATE = {\r\n    status:true,\r\n    name:\"Krishna\",\r\n    sirname:\"Kumar\"\r\n}\r\n\r\nconst userReducer = (state=USER_INITIAL_STATE, {type, payload}) => {\r\n    switch (type) {\r\n        case \"value\":\r\n            return state;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./reducer/user.reducer\";\r\n\r\nexport default combineReducers(\r\n    {userReducer}\r\n)","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\"\r\nimport rootReducer from \"./root.reducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n// Create saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n)\r\n// sagaMiddleware.run()\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Qrcode';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\"\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}